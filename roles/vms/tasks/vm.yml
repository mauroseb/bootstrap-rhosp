# Create a new VM
- name: "Create vm {{ name }}"
  become: yes
  block:

    - name: "Create {{ name }} overlay for root volume"
      command: "/usr/bin/qemu-img create -f qcow2 -b {{ target_image }} {{ image_dst_dir }}/{{ name }}.qcow2 "
      args:
        creates:  "{{ image_dst_dir }}/{{ name }}.qcow2"
      when: not empty_root|bool

    - name: "Create {{ name }} empty root volume"
      command: "/usr/bin/qemu-img create -f qcow2 -o preallocation=metadata {{ image_dst_dir }}/{{ name }}.qcow2 50G"
      args:
        creates:  "{{ image_dst_dir }}/{{ name }}.qcow2"
      when: empty_root|bool

    - name: "Create OSD disk for {{ name }}"
      command: "/usr/bin/qemu-img create -f qcow2 -o preallocation=metadata {{ image_dst_dir }}/{{ name }}-osd-1.qcow2 50G"
      args:
        creates:  "{{ image_dst_dir }}/{{ name }}-osd-1.qcow2"
      when: ceph|bool

# Create VMs with first NIC in provisioning net and 2nd and 3rd in default for bonding
    - name: "Create {{ name }} VM"
      command: "/usr/bin/virt-install --ram  {{ ram }} --vcpus {{ vcpus }} --os-variant rhel8.1 --cpu host,+vmx --disk path={{ image_dst_dir }}/{{ name }}.qcow2,device=disk,bus=virtio,format=qcow2 --import --noautoconsole --vnc --network network:provisioning --network network:default --network network:default --name {{ name }}"
      args:
        creates:  "/etc/libvirt/qemu/{{ name }}.xml"
      when:
        - not ceph|bool

    - name: "Create {{ name }} VM"
      command: "/usr/bin/virt-install --ram  {{ ram }} --vcpus {{ vcpus }} --os-variant rhel8.1 --cpu host,+vmx --disk path={{ image_dst_dir }}/{{ name }}.qcow2,device=disk,bus=virtio,format=qcow2 --disk path={{ image_dst_dir }}/{{ name }}-osd-1.qcow2 --import --noautoconsole --vnc --network network:provisioning --network network:default --network network:default --name {{ name }}"
      args:
        creates:  "/etc/libvirt/qemu/{{ name }}.xml"
      when:
        - ceph|bool

    - name: "Find provisioning mac of {{ name }} VM"
      command: |
        virsh domiflist ice-com-01 | awk '/provisioning/ { print $5 }'
      register: provisioning_mac

    - name: "Add MAC to overcloud dictionary for {{ name }}"
      set_fact:
        mac_list: "{{ mac_list | combine( { name: provisioning_mac.stdout } ) }}"
      when:
        - provisioning_mac.rc == 0

    - debug:
        msg: "{{ mac_list }}"

...
